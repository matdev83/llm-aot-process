**Problem 2: The Encrypted Sequence (Revised)**

**Domain:** Algorithmic Thinking / Pattern Recognition

**Problem Statement:**

A data stream transmits sequences of positive integers. An anomaly has been detected: some sequences are encrypted by a peculiar algorithm before transmission. The algorithm involves three distinct operations, always applied in the same order:

1.  **Operation Alpha (A):** Replaces each number `x` in the sequence with `(x*M) + K`, where `M` and `K` are secret positive integer constants.
2.  **Operation Beta (B):** Reverses the entire sequence.
3.  **Operation Gamma (G):** For each adjacent pair of numbers `(s_i, s_{i+1})` in the current sequence, it calculates a new value `s_{i+1} - s_i + K` (using the same constant `K` from Operation Alpha). The sequence of these new values forms the result of Operation Gamma. The new sequence will have one less element. This operation is only applied if the sequence has at least two numbers after Operation Beta. If it has fewer than two numbers, Operation Gamma results in an empty sequence.

You are given an original sequence and the final, encrypted sequence. You also know that `M` and `K` are positive integers between 1 and 10 (inclusive).

**Original Sequence:** `[3, 7, 2]`
**Encrypted Sequence:** `[13, -5]`

**Task:** Determine the values of the constants `M` and `K`.
